using System;

public class TreeNode {
	public int val;
	public TreeNode left;
    public TreeNode right;
    public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
		this.val = val;
        this.left = left;
        this.right = right;
    }
}

public class Solution {
	static string ans = "";
	static TreeNode r = new TreeNode();
    public static string Tree2str(TreeNode root) {
		if(root != null) {
			ans=ans+root.val;
			r=root;
		}
		PreOrder(root);
		return ans;
    }
	public static void PreOrder(TreeNode root) {
		if(root.left == null && root.right != null) ans=ans+'('+')';
		if(root.left!=null) {
			ans=ans+'('+root.left.val;
			PreOrder(root.left);
		}
		if(root.right != null) {
			ans=ans+'('+root.right.val;
			PreOrder(root.right);
		}
		if(root != r) ans=ans+')';
	}
}

public class Program
{
	public static void Main()
	{
		TreeNode node = new TreeNode();
		node.val = 1;
		node.left = new TreeNode();
		node.left.val = 2;
		node.right = new TreeNode();
		node.right.val = 3;
		node.left.left = new TreeNode();
		node.left.left.val = 4;
		
		var ans = Solution.Tree2str(node);
		Console.WriteLine(ans);
	}
}